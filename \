#include<sys/cdefs.h>
#include<math.h>
#include<string.h>
#include<time.h>
#include<stdbool.h>
#include<stdio.h> //for getchar();
#include<stdlib.h> //for system("");
#include <unistd.h> //for sleep();

//Высокомерие или чистейшая вера в себя???

//Arrays in C

//Discription:
/*- массив — это структура данных, представляющая собой совокупность
    элементов одного типа;
  - В инструкции объявления массива указывается количество
    элементов массива;
  - Элементы массива нумеруются с нуля;
  - Доступ к элементу массива осуществляется путем указания
    индекса (номера) элемента. 
    В качестве индекса можно исполь­зовать константу, переменную 
    или выражение целого типа.
  - Индекс может меняться от 0 до n - 1, где n — число элементов массива;
  - Доступ к элементам массива можно осуществить при помощи указателя;
  - В инструкции объявления массива удобно использовать именованную константу,
    объявленную в директиве #define;
  - Для ввода, вывода и обработки массивов удобно использовать 
    инструкции циклов (for, while);
  - Типичной ошибкой при работе с массивами является обращение
    к несуществующему элементу, т. е. выход индекса задопустимые пределы значений.
*/
//Pointers
/*
  - Указатель является переменной, значение которого является 
    адрес другой переменной.т.е. прямой адрес ячейки памяти.
  - Как и любая переменная или константа, вы должны объявить указатель, 
    прежде чем использовать его для хранения любого адреса переменной.

  - Тип - это базовый тип указателя; 
  - var-name - это имя переменной-указателя;
  - Звездочка *, используется для обозначения переменной 
    в качестве указателя.;

  - Фактически любой тип данных(int, float, double, char) являются одним
    и тем же, длинное шестнадцатеричное число,
    представляющее адрес памятию.
  - Единственное различие между указателями разных типов 
    данных - это тип данных переменной или константы, 
    на которую указывает указатель.

    How to use pointers:

    Несколько важных операций, которые мы будем делать с помощью указателей.
    а) мы определяем переменную указателя
    б) назначаем адрес переменной указателю 
    в) наконец получаем доступ к значению по адресу,
       доступному в переменной указателя. 
    !!!!
    Это делается с помощью унарного оператора *,
    который возвращает значение переменной, 
    расположенной по адресу, указанному ее операндом.

*/
//Syntax:
/*
   type *var_name;
   
   example:
   int    *ip;    // pointer to an integer 
   double *dp;    // pointer to a double 
   float  *fp;    // pointer to a float 
   char   *ch     // pointer to a character
*/

#define X 3
#define Y 4
int main(){
    int ary[X][Y] = {1,2,3,4,5,6,7,8,9,10,11,12};
    int row, col;

    for(row = 0; row < X; row++){
	for(col = 0; col < Y; col++){
	    printf("%d %d\n", ary[row][col]);
	}
    }
}
